import { ParserException } from "./CronixParser";
import CronixMode from "./CronixMode";
import CronixExpression from "./CronixExpression";
import { CronExpression } from "@/common";
export interface ParseResult {
    ast: CronExpression | null;
    errors: ParserException[];
}
/**
 * Parse an expression. If the underlying parser encounters an error it the resulting expression will be null and you will find errors information in the result object.
 * Note that this function create a new parser instance for each call, so avoid this approach in favor of the CronixParse instance if possible.
 * @param expression The expression to parse
 * @param mode The mode the parser operates in
 */
export default function cronix(expression: string | CronixExpression, mode?: CronixMode): ParseResult;
