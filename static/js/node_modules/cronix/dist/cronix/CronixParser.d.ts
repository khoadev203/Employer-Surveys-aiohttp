import { ILexingError, Lexer } from "chevrotain";
import { CronCstParser } from "@/cron";
import { CronExpression } from "@/common/syntax";
import CronixExpression from "./CronixExpression";
import CronixOptions from "./CronixOptions";
import { QuartzCronExpression } from "@/quartz";
import { AbstractVisitor, BaseCstParser } from "@/common";
/**
 * Enum indicating the different steps the parser goes through. Useful for error reporting
 */
export declare enum ParserStep {
    LEXING = "lexing",
    PARSING = "parsing",
    SEMANTIC = "semantic"
}
/**
 * An exception raised during parsing to indicate failure to process the input.
 */
export interface ParserException extends Error {
    /**
     * The root cause of the exception
     */
    innerException: Error | ILexingError;
    /**
     * Indicates the step at which the parser failed
     */
    step: ParserStep;
}
/**
 * A Cron parser with support for multiple cron dialects.
 */
export declare abstract class CronixParser<T extends CronExpression = CronExpression> {
    private readonly mode;
    private readonly _lexer;
    private readonly _parser;
    private readonly _visitor;
    private _errors;
    protected constructor(options: CronixOptions, parser: BaseCstParser, visitor: AbstractVisitor);
    /**
     * Parse a complete Cron expression, according to the parser's context.
     * @param expression The expression to parse. Can either be a string or an object describing the expression
     * @return The parsed expression as a syntax tree
     */
    parse(expression: string | CronixExpression): T;
    parseField(expression: string): T;
    /**
     * Reset the parser's state. This flush any errors raised during a previous parse.
     */
    private reset;
    get lexer(): Lexer;
    get parser(): CronCstParser;
    get visitor(): AbstractVisitor;
    get errors(): ParserException[];
}
export declare class CronParser extends CronixParser {
    constructor();
}
export declare class QuartzParser extends CronixParser<QuartzCronExpression> {
    constructor();
}
export declare class JenkinsParser extends CronixParser {
    constructor();
}
